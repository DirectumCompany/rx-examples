<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidResponsibleId" xml:space="preserve">
    <value>Сотрудник с ИД, указанным в качестве ИД ответственного за документы захвата, не найден.</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>Не найден файл {0}.</value>
  </data>
  <data name="NoFilesInfoInPackage" xml:space="preserve">
    <value>В метаданных пакета, сформированного DCS, нет информации о содержащихся в нём файлах.</value>
  </data>
  <data name="DocumentName" xml:space="preserve">
    <value>Простой документ №{0}</value>
  </data>
  <data name="CheckPackageTaskName" xml:space="preserve">
    <value>Проверьте комплект документов: {0}</value>
  </data>
  <data name="DocumentNotFound" xml:space="preserve">
    <value>Документ с ИД {0} не найден.</value>
  </data>
  <data name="CheckPackage" xml:space="preserve">
    <value>Проверьте комплект документов:</value>
  </data>
  <data name="AttachmentName" xml:space="preserve">
    <value>Приложение №{0}</value>
  </data>
  <data name="CheckPackageTaskText" xml:space="preserve">
    <value>Убедитесь, что документы комплекта занесены в полном объеме.
На закладке «Верификация» карточки документа проверьте корректность данных, заполненных системой.
При необходимости у простых документов и приложений смените тип.
Зарегистрируйте документ, если он подлежит регистрации.
Отправьте документы на дальнейшую обработку.
Если документ занесен ошибочно, удалите его.</value>
  </data>
  <data name="SimpleDocumentName" xml:space="preserve">
    <value>Документ</value>
  </data>
  <data name="ClassifierNotFound" xml:space="preserve">
    <value>Не найден классификатор с именем {0}</value>
  </data>
  <data name="EmptyArioUrl" xml:space="preserve">
    <value>Не задан адрес сервиса Ario</value>
  </data>
  <data name="EmailBodyDocumentName" xml:space="preserve">
    <value>Эл. письмо от {0}</value>
  </data>
  <data name="NoticeToAuthorSubject" xml:space="preserve">
    <value>Документ подписан контрагентом: {0}</value>
  </data>
  <data name="VersionCreateFromBarcode" xml:space="preserve">
    <value>Версия создана службой ввода документов.</value>
  </data>
  <data name="FailedClassifyDocumentTaskText" xml:space="preserve">
    <value>Службе ввода не удалось классифицировать документ:</value>
  </data>
  <data name="CheckDocumentTaskName" xml:space="preserve">
    <value>Проверьте документ: {0}</value>
  </data>
  <data name="FailedClassifyDocumentsTaskText" xml:space="preserve">
    <value>Службе ввода не удалось классифицировать документы:</value>
  </data>
  <data name="CheckDocument" xml:space="preserve">
    <value>Проверьте документ:</value>
  </data>
  <data name="FailedClassifyDocumentsTaskName" xml:space="preserve">
    <value>Проверьте комплект документов, поступивший от службы ввода</value>
  </data>
  <data name="NeedToNumberDocument" xml:space="preserve">
    <value>Необходимо пронумеровать документ.</value>
  </data>
  <data name="SetDocumentNumber" xml:space="preserve">
    <value>Необходимо заполнить номер документа.</value>
  </data>
  <data name="SetDocumentDate" xml:space="preserve">
    <value>Необходимо заполнить дату документа.</value>
  </data>
  <data name="UnknownNumber" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>документа</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>документов</value>
  </data>
  <data name="Kind" xml:space="preserve">
    <value>видом</value>
  </data>
  <data name="Kinds" xml:space="preserve">
    <value>видами</value>
  </data>
  <data name="DocumentsWithRegistrationFailureTaskText" xml:space="preserve">
    <value>Для {0} с {1} {2} не удалось подобрать настройку регистрации. Обратитесь к администратору системы.</value>
  </data>
  <data name="CantProcessFileByArio" xml:space="preserve">
    <value>Обработать документ в Ario не получилось.</value>
  </data>
  <data name="DocumentsWithVersionByBarcodeTaskText" xml:space="preserve">
    <value>Найден существующий документ по штрихкоду. Создана новая версия.</value>
  </data>
</root>